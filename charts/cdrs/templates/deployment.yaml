{{- if .Values.enabled }}
{{- if not .Values.despliegueDaemonset }}
# {{- (include "aachart.entorno" .) -}}
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aachart.fullname" . }}
  labels:
    {{- include "aachart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicasDeployment}}
  selector:
    matchLabels:
      {{- include "aachart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "aachart.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
            weight: 100
      
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "aachart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: oracle-secret-volume
          secret:
            secretName: oracle-secret
        - name: counters-volume
          emptyDir: {}
        - name: data-volume
          persistentVolumeClaim:
          {{- if not .Values.pvc.pvcExistente }}
            claimName: {{ lower .Values.gencdr.funcionalidad | replace "_" "-"}}-pvc
          {{- else }}
            claimName: {{ lower .Values.pvc.pvcExistente }}
          {{- end }}
      initContainers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: nfs-fixer
          command:
            - sh
            - '-c'
            - >-
              (chmod 0775 /export/sdp/serv/datos/comun; chown 500
              /export/sdp/serv/datos/comun && echo "chown success"; chgrp 500
              /export/sdp/serv/datos/comun && echo "Done")
          securityContext:
            runAsUser: 0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: data-volume
              mountPath: /export/sdp/serv/datos/comun
          terminationMessagePolicy: File
          image: "{{ default $.Values.image.repository $.Values.exporter.image.repository }}{{ $.Values.exporter.image.imageName }}:{{ $.Values.exporter.image.tag }}"
      containers:
        {{- range $id, $ed := until (.Values.instancias | int) }}
        - name: proceso-gen{{ $id }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ default $.Values.image.repository $.Values.gencdr.image.repository }}{{ $.Values.gencdr.image.imageName }}:{{ default $.Chart.AppVersion $.Values.gencdr.image.tag }}"
          imagePullPolicy: {{ default $.Values.image.pullPolicy $.Values.gencdr.image.pullPolicy }}
          terminationMessagePath: /export/manager/termination.log
          volumeMounts:
          - name: oracle-secret-volume
            mountPath: /export/manager/passdir
            readOnly: true
          - name: counters-volume
            mountPath: /export/manager/contadores
            readOnly: false 
          - name: data-volume
            mountPath: /export/sdp/serv/datos/comun
            readOnly: false
          env:
          {{- range $name, $item := $.Values.env }}
          - name: {{ $name }}
            {{- $item | toYaml | nindent 12 }}
          {{- end  }}
          - name: CNF_ZMQ_CLAVE_PRIVADA
            valueFrom:
              secretKeyRef:
                name: zmq-secret
                key: CLAVE_PRIVADA
          - name: CNF_ZMQ_CLAVE_PUBLICA
            valueFrom:
              secretKeyRef:
                name: zmq-secret
                key: CLAVE_PUBLICA
          - name: BD_USER
            valueFrom:
              secretKeyRef:
                name: oracle-secret
                key: BD_USER
          - name: BD_NAME
            valueFrom:
              secretKeyRef:
                name: oracle-secret
                key: BD_NAME
          - name: FUNCIONALIDAD
            value: "{{ $.Values.gencdr.funcionalidad }}"
          - name: FUNCIONALIDAD_ID
            value: "{{ $.Values.gencdr.funcionalidadId }}"
          {{- if $.Values.despliegueDaemonset }}
          - name: CNF_USA_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          {{- else }}
          - name: CNF_USA_NODENAME
            value: "-"
          {{- end }}
          - name: INSTANCIA
            value: "{{ $ed }}"
          - name:  IP_WORKER
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - /export/manager/livenessProbe.sh
            initialDelaySeconds: 30
            periodSeconds: 5

          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - /export/manager/readinessProbe.sh
            periodSeconds: 5

          resources:
            {{- toYaml $.Values.gencdr.resources | nindent 12 }}
        {{- end }}
        {{- range $id, $ed := until ($.Values.instancias | int) }}
        - name: proceso-tran{{ $id }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ default $.Values.image.repository $.Values.transcdr.image.repository }}{{ $.Values.transcdr.image.imageName }}:{{  default $.Chart.AppVersion $.Values.transcdr.image.tag }}"
          imagePullPolicy: {{ default $.Values.image.pullPolicy $.Values.transcdr.image.pullPolicy }}
          terminationMessagePath: /export/manager/termination.log
          volumeMounts:
          - name: oracle-secret-volume
            mountPath: /export/manager/passdir
            readOnly: true
          - name: counters-volume
            mountPath: /export/manager/contadores
            readOnly: false 
          - name: data-volume
            mountPath: /export/sdp/serv/datos/comun
            readOnly: false
          env:
          {{- range $name, $item := $.Values.env }}
          - name: {{ $name }}
            {{- $item | toYaml | nindent 12 }}
          {{- end  }}
          - name: CNF_ZMQ_CLAVE_PRIVADA
            valueFrom:
              secretKeyRef:
                name: zmq-secret
                key: CLAVE_PRIVADA
          - name: CNF_ZMQ_CLAVE_PUBLICA
            valueFrom:
              secretKeyRef:
                name: zmq-secret
                key: CLAVE_PUBLICA
          - name: BD_USER
            valueFrom:
              secretKeyRef:
                name: oracle-secret
                key: BD_USER
          - name: BD_NAME
            valueFrom:
              secretKeyRef:
                name: oracle-secret
                key: BD_NAME
          - name: FUNCIONALIDAD
            value: "{{ $.Values.transcdr.funcionalidad }}"
          - name: FUNCIONALIDAD_ID
            value: "{{ $.Values.transcdr.funcionalidadId }}"
          - name: RCVCDRPROC
            value: "{{ $.Values.transcdr.procRecepcionCDRs }}"
          - name: RCVCDRIP
            value: "{{ $.Values.transcdr.ipRecepcionCDRs }}"
          - name: TAMBLOQUE
            value: "{{ $.Values.transcdr.tamBloque }}"
          - name: INSTANCIA
            value: "{{ $ed }}"
          - name:  IP_WORKER
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP

          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - /export/manager/livenessProbe.sh
            initialDelaySeconds: 30
            periodSeconds: 5

          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - /export/manager/readinessProbe.sh
            periodSeconds: 5

          resources:
            {{- toYaml $.Values.transcdr.resources | nindent 12 }}
        {{- end }}
        {{- if .Values.testrcv }}
        {{- range $id, $ed := until (.Values.instancias | int) }}
        - name: proceso-rcv{{ $id }}
          {{- if not $.Values.testrcvimage }}
          image: "zape-k8s-dockreg:5000/rcvcdr:1"
          {{- else }}
          image: "{{ $.Values.testrcvimage }}"
          {{- end }}
          imagePullPolicy: "IfNotPresent"
          terminationMessagePath: /export/manager/termination.log
          volumeMounts:
          - name: oracle-secret-volume
            mountPath: /export/manager/passdir
            readOnly: true
          - name: counters-volume
            mountPath: /export/manager/contadores
            readOnly: false 
          - name: data-volume
            mountPath: /export/sdp/serv/datos/comun
            readOnly: false
          env:
          {{- range $name, $item := $.Values.env }}
          - name: {{ $name }}
            {{- $item | toYaml | nindent 12 }}
          {{- end  }}
          - name: CNF_ZMQ_CLAVE_PRIVADA
            valueFrom:
              secretKeyRef:
                name: zmq-secret
                key: CLAVE_PRIVADA
          - name: CNF_ZMQ_CLAVE_PUBLICA
            valueFrom:
              secretKeyRef:
                name: zmq-secret
                key: CLAVE_PUBLICA
          - name: BD_USER
            valueFrom:
              secretKeyRef:
                name: oracle-secret
                key: BD_USER
          - name: BD_NAME
            valueFrom:
              secretKeyRef:
                name: oracle-secret
                key: BD_NAME
          - name: FUNCIONALIDAD
            value: "RCVCDR"
          - name: FUNCIONALIDAD_ID
            value: "12345"
          - name: INSTANCIA
            value: "{{ $ed }}"
          - name:  IP_WORKER
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP


          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - /export/manager/readinessProbe.sh
            periodSeconds: 5

          resources:
            limits:
              cpu: "50m"
              memory: "15Mi"
        {{- end }}
        {{- end }}

        - name: exporter
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ default $.Values.image.repository $.Values.exporter.image.repository }}{{ $.Values.exporter.image.imageName }}:{{ $.Values.exporter.image.tag }}"
          imagePullPolicy: {{ default $.Values.image.pullPolicy $.Values.exporter.image.pullPolicy }}
          ports:
          - name: prometheus
            containerPort: 9100
            protocol: TCP
          volumeMounts:
          - name: counters-volume
            mountPath: /export/manager/contadores
            readOnly: false
          resources:
            {{- toYaml .Values.exporter.resources | nindent 12}}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
