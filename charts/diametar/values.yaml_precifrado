# Default values for aachart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Numero de instancias del diameterDatos que se levantan en capa 1 (interface)
replicaCount1: 1
# -- Numero de instancias del diameterDatos que se levantan en capa 2 (procesado/distribucion)
replicaCount2: 1

# -- Usuario prepago para conectarse a la BD (en BASE64)<br/>
# > echo -n \<user\> \| base64<br/>
# Se copia al oracle-secret
# @default -- ...
databaseUser: UFBfVEVMQ08wMQ== 

# -- Nombre de la BD (en BASE64) con la que arranca el proceso<br/>
# > echo -n \<BD\> \| base64 <br/>
# Se copia al oracle-secret
# @default -- ...
databaseName: U0RQMQ==

# -- Fichero PASS con usuario y password cifrados en el formato tradicional de Altamira, + codificado en BASE64 <br/>
# Se copia al oracle-secret<br/>
# @default -- ...
databaseAccessFile: MDA0MDM2MTYyMDMzMDg5MDEyMTg4MTE3MDAxMTIzMTAzMDMyMDY1MDAyMTcyMDkxMjEwMTMzMTQ5MTYwMDA5MjI5MTA1MTYzMDA1MDYzMTY1MjEwMDUwMTEwMjE4MjAzCjAwNDAzNjE2MjAzMzA4OTAxMjE4ODExNzAwMTEyMzEwMzAzMjA2NTAwMjE3MjA5MTIxMDEzMzE0OTE2MDAwOTIyOTEwNTE2MzAwNTA2MzE2NTIxMDA1MDExMDIxODIwMwo=

# -- tnsnames.ora para conectarse a la BD. Debe incluir la conexion para la BD definida en \<databaseName\>, + codificado en BASE64 <br/> 
# Es el tnsnames.ora que se tiene en los FED tradicionales de altamira <br/> 
# Se copia al oracle-secret
# @default -- ...
tnsnames: U0RQMSA9CiAoREVTQ1JJUFRJT04gPQogIChBRERSRVNTX0xJU1QgPQogICAoRkFJTE9WRVI9T04pCiAgIChBRERSRVNTID0gKFBST1RPQ09MPSBUQ1ApKEhvc3QgPSAxMC45NS4yMTAuMjIpKFBvcnQ9IDE1MjEpKQogICkKICAoQ09OTkVDVF9EQVRBID0gKFNFUlZJQ0VfTkFNRSA9IFNEUF9FUzAxKSAoU0VSVkVSPWRlZGljYXRlZCkpCikKClJBQzAgPQogKERFU0NSSVBUSU9OID0KICAoQUREUkVTU19MSVNUID0KICAgKEZBSUxPVkVSPU9OKQogICAoQUREUkVTUyA9IChQUk9UT0NPTD0gVENQKShIb3N0ID0gMTAuOTUuMjEwLjIyKShQb3J0PSAxNTIxKSkKICApCiAgKENPTk5FQ1RfREFUQSA9IChTRVJWSUNFX05BTUUgPSBTRFBfRVMwMSkgKFNFUlZFUj1kZWRpY2F0ZWQpKQopCg==

# -- Nombre de la funcionalidad que se esta desplegando
funcionalidad: DIAMETER3GPP

# -- Identificador (tabla AD) de la funcionalidad que se esta desplegando
funcionalidad_id: 85

env:
  # -- Nivel de trazas del proceso: 0-Todas. 1-Solo de error e informativas
  NIVEL_TRAZAS:
    value:  "0"
  # -- Tipo de exporter de OpenTelemetry.  0-Ninguno, 1-Logs, 2-JaegerUDP, 3-JaegerHTTP
  CNF_OPENTELEMETRY_EXPORTER_TIPO:
    value: "0"
  # -- Host donde se envian los intervalos de OpenTelemetry (en conjuncion con CNF_OPENTELEMETRY_EXPORTER_PORT)
  # Si es por UDP, se suele enviar a localhots o a un DaemonSet (indicando en CNF_OPENTELEMETRY_EXPORTER_HOST status.hostIP)
  # Si es por HTTP se pone la direccion del jaeger agent, por ejemplo jaeger-agent.jaeger
  CNF_OPENTELEMETRY_EXPORTER_HOST:
    value: "jaeger-agent.jaeger"
#    valueFrom:
#     fieldRef:
#        fieldPath: status.hostIP
  # -- Puerto donde se envian los intervalos de OpenTelemetry (en conjuntcion con CNF_OPENTELEMETRY_EXPORTER_HOST)
  CNF_OPENTELEMETRY_EXPORTER_PORT:
    value: "6831"
  # -- Uso de cifrado en las conexiones 0MQ (las claves deben proporcionarse en el zmq-secret). Los procesos
  #    de FED y BELS tienen que tener la misma configuraci√≥
  CNF_ZMQ_CIFRADO:
    value: "1"

image:
  # -- Repositorio de donde bajar el contenedor del diameterdatos (version en Chart.yaml/appVersion)
  repository: zape-k8s-dockreg:5000/diameterdatos
  # @ignored al generar doc automatica
  pullPolicy: Always

exporterImage:
  # -- Repositorio de donde bajar el contenedor del exportador de metricas, para llevar los contadores de diameterdatos a prometheus
  repository: zape-k8s-dockreg:5000/metrics_aa_exporter
  # @ignored al generar doc automatica
  pullPolicy: Always
  # @ignored al generar doc automatica
  tag: latest

reloadMonitorImage:
  # -- Repositorio de donde bajar el monitor de relecturas
  repository: zape-k8s-dockreg:5000/monitor_relecturas
  # @ignored al generar doc automatica
  pullPolicy: Always
  # @ignored al generar doc automatica
  tag: latest

podAnnotations:
  # -- Anotacion para indicar a prometheus que debe recopilar metricas de estos pods
  prometheus.io/scrape: 'true'
  # -- Puerto donde se sirven las metricas
  prometheus.io/port: '9100'

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Servicio de entrada de trafico Gy
service:
  # -- Tipo de servicio de entrada del interface Gy
  type: NodePort
  # -- Puerto interno donde recibir conexiones del interface Gy
  port: 31007
  # -- Puerto externo donde recibir conexiones del interface Gy
  nodePort: 31007

# HPA para hacer autoescalado horizontal de la capa 2 (procesado) del
# diameterdatos
autoscaling:
  # -- Activacion del HPA en la capa 2 del diameterdatos
  enabled: true
  # -- Numero minimo de instancias en la capa de procesado
  minReplicas: 1
  # -- Numero maximo de instancias en la capa de procesado
  maxReplicas: 5
  # -- Porcentaje de discrepancia entre el numero de instancias actual y el deseado por el HPA
  # que se considera tolerable, y que no hay que variar el numero de instancias
  tolerance: "0.1"
  # -- Umbral de consumo de CPU de una instancia (700m = 70% de una CPU) para que el HPA escale
  targetCPUUtilizationValue: 700m

# -- Clave publica usada en los sockets cliente 0MQ
publicKeyZMQ: OEpNQTNXd2IoPWREb3VkZkNPMik5PTdvQn1YVkhuKndPYTVXJW1eeg==

# -- Clave privada usada en los sockets servidor 0MQ
privateKeyZMQ: ekVkVS0qUyFIIXlKPDBhOnBHbVohdllrdEVTdjFYUy9Pd2Z3bS4tVA==

#resources:
#  limits:
#    cpu: "1"
#  requests:
#    cpu: 200m

